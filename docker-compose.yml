version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8
    container_name: healthcare_mysql
    environment:
      MYSQL_DATABASE: healthcare_db
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - healthcare_network
    restart: unless-stopped

  # Healthcare Management System API
  healthcare_api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: healthcare_api
    environment:
      - DATABASE_HOST=mysql
      - DATABASE_PORT=3306
      - DATABASE_NAME=healthcare_db
      - DATABASE_USER=user
      - DATABASE_PASSWORD=password
      - API_HOST=0.0.0.0
      - API_PORT=5000
      - GROQ_API_KEY=${GROQ_API_KEY}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - LOG_LEVEL=INFO
    ports:
      - "5000:5000"
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    depends_on:
      - mysql
    networks:
      - healthcare_network
    restart: unless-stopped
    command: python src/main.py

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: healthcare_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - healthcare_network
    restart: unless-stopped

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: healthcare_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - healthcare_api
    networks:
      - healthcare_network
    restart: unless-stopped

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  healthcare_network:
    driver: bridge
